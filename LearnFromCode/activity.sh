#!/bin/bash

# Configuration
DAYS=180                              # Nombre de jours (6 mois = 180 jours)
REPO_PATH="."                         # Chemin du d√©p√¥t Git local
BRANCH="main"                         # Branche sur laquelle pousser les commits

# Liste des messages de commit pour la randomisation
MESSAGES=(
    "Progress on FreeCodeCamp üöÄ"
    "Learning new math concepts üìê"
    "Advancing on Udemy course üéì"
    "Experimenting with Python scripts üêç"
    "Improving HTML/CSS skills üåê"
    "Working on JavaScript challenges üíª"
    "Studying Git and GitHub fundamentals üìò"
    "Exploring React and front-end development üåü"
    "Taking notes on algorithms and data structures üìù"
    "Building projects in web development üíº"
    "Practicing Japanese language skills üáØüáµüìñ"
    "Studying English vocabulary and grammar üá¨üáßüìù"
    "Reviewing kanji and hiragana for Japanese learning üìöüáØüáµ"
    "Improving English listening and comprehension skills üéßüá¨üáß"
    "Learning conversational Japanese phrases üó£Ô∏èüáØüáµ"
)

# V√©rification du d√©p√¥t Git
cd "$REPO_PATH" || { echo "Erreur : le chemin du d√©p√¥t est invalide."; exit 1; }
if [ ! -d .git ]; then
    echo "Erreur : Ce dossier n'est pas un d√©p√¥t Git."
    exit 1
fi

# Cr√©ation d'un fichier temporaire pour les commits
TEMP_FILE="learn_journal.txt"
touch "$TEMP_FILE"

echo "D√©but de la simulation d'activit√© sur GitHub..."

# Boucle sur chaque jour des 6 derniers mois
for i in $(seq 0 $((DAYS - 1))); do
    # Calculer la date (aujourd'hui - i jours)
    DATE=$(date -d "-$i days" "+%Y-%m-%d")

    # D√©terminer un nombre al√©atoire de commits pour ce jour (entre 1 et 5)
    COMMITS_PER_DAY=$((RANDOM % 5 + 1))

    # R√©p√©ter les commits pour ce jour
    for j in $(seq 1 $COMMITS_PER_DAY); do
        # G√©n√©rer un message al√©atoire parmi la liste
        RANDOM_INDEX=$((RANDOM % ${#MESSAGES[@]}))
        COMMIT_MESSAGE="${MESSAGES[$RANDOM_INDEX]}"

        # Modifier le fichier temporaire pour simuler une modification
        echo "$DATE - Commit $j" >> "$TEMP_FILE"

        # Ajouter et committer avec des dates simul√©es et un message al√©atoire
        git add "$TEMP_FILE"
        GIT_AUTHOR_DATE="$DATE 12:00:00" GIT_COMMITTER_DATE="$DATE 12:00:00" \
        git commit -m "$COMMIT_MESSAGE"
    done
done

# Pousser les commits sur la branche sp√©cifi√©e
git push origin "$BRANCH"

echo "Simulation termin√©e ! Les commits sont visibles sur GitHub."
